Riesgo,Vulnerabilidad,Tipo,Tecnología,Descripción,Solución,Archivos afectados,Línea afectada,CWE
HIGH,auth,,,"'password' detected in this expression, review this potentially hard-coded credential.","Recommended Secure Coding Practices   Store the credentials in a configuration file that is not pushed to the code repository.    Store the credentials in a database.    Use the secret management service of you cloud provider.    If the a password has been disclosed through the source code: change it. Compliant SolutionConnection conn = null;try {  String uname = getEncryptedUser();  String password = getEncryptedPass();  conn = DriverManager.getConnection(""jdbc:mysql://localhost/test?"" +        ""user="" + uname + ""&amp;password="" + password);See   OWASP Top 10 2017 Category A2 - Broken Authentication    MITRE, CWE-798 - Use of Hard-coded Credentials    MITRE, CWE-259 - Use of Hard-coded Password    CERT, MSC03-J. - Never hard code sensitive information    SANS Top 25 - Porous Defenses    Derived from FindSecBugs rule Hard Coded Password ",CIBERSEG:src/main/java/net/gencat/icass/valisa/struts/action/TipusDocumentAction.java,236,"CWE-798, CWE-259"
HIGH,auth,,,"'password' detected in this expression, review this potentially hard-coded credential.","Recommended Secure Coding Practices   Store the credentials in a configuration file that is not pushed to the code repository.    Store the credentials in a database.    Use the secret management service of you cloud provider.    If the a password has been disclosed through the source code: change it. Compliant SolutionConnection conn = null;try {  String uname = getEncryptedUser();  String password = getEncryptedPass();  conn = DriverManager.getConnection(""jdbc:mysql://localhost/test?"" +        ""user="" + uname + ""&amp;password="" + password);See   OWASP Top 10 2017 Category A2 - Broken Authentication    MITRE, CWE-798 - Use of Hard-coded Credentials    MITRE, CWE-259 - Use of Hard-coded Password    CERT, MSC03-J. - Never hard code sensitive information    SANS Top 25 - Porous Defenses    Derived from FindSecBugs rule Hard Coded Password ",CIBERSEG:src/main/java/net/gencat/icass/valisa/struts/action/TipusDocumentAction.java,240,"CWE-798, CWE-259"
HIGH,auth,,,"'password' detected in this expression, review this potentially hard-coded credential.","Recommended Secure Coding Practices   Store the credentials in a configuration file that is not pushed to the code repository.    Store the credentials in a database.    Use the secret management service of you cloud provider.    If the a password has been disclosed through the source code: change it. Compliant SolutionConnection conn = null;try {  String uname = getEncryptedUser();  String password = getEncryptedPass();  conn = DriverManager.getConnection(""jdbc:mysql://localhost/test?"" +        ""user="" + uname + ""&amp;password="" + password);See   OWASP Top 10 2017 Category A2 - Broken Authentication    MITRE, CWE-798 - Use of Hard-coded Credentials    MITRE, CWE-259 - Use of Hard-coded Password    CERT, MSC03-J. - Never hard code sensitive information    SANS Top 25 - Porous Defenses    Derived from FindSecBugs rule Hard Coded Password ",CIBERSEG:src/main/java/net/gencat/icass/valisa/struts/action/TipusDocumentAction.java,244,"CWE-798, CWE-259"
HIGH,auth,,,"'password' detected in this expression, review this potentially hard-coded credential.","Recommended Secure Coding Practices   Store the credentials in a configuration file that is not pushed to the code repository.    Store the credentials in a database.    Use the secret management service of you cloud provider.    If the a password has been disclosed through the source code: change it. Compliant SolutionConnection conn = null;try {  String uname = getEncryptedUser();  String password = getEncryptedPass();  conn = DriverManager.getConnection(""jdbc:mysql://localhost/test?"" +        ""user="" + uname + ""&amp;password="" + password);See   OWASP Top 10 2017 Category A2 - Broken Authentication    MITRE, CWE-798 - Use of Hard-coded Credentials    MITRE, CWE-259 - Use of Hard-coded Password    CERT, MSC03-J. - Never hard code sensitive information    SANS Top 25 - Porous Defenses    Derived from FindSecBugs rule Hard Coded Password ",CIBERSEG:src/main/java/net/gencat/icass/valisa/struts/action/ValisaAction.java,1961,"CWE-798, CWE-259"
HIGH,auth,,,"'password' detected in this expression, review this potentially hard-coded credential.","Recommended Secure Coding Practices   Store the credentials in a configuration file that is not pushed to the code repository.    Store the credentials in a database.    Use the secret management service of you cloud provider.    If the a password has been disclosed through the source code: change it. Compliant SolutionConnection conn = null;try {  String uname = getEncryptedUser();  String password = getEncryptedPass();  conn = DriverManager.getConnection(""jdbc:mysql://localhost/test?"" +        ""user="" + uname + ""&amp;password="" + password);See   OWASP Top 10 2017 Category A2 - Broken Authentication    MITRE, CWE-798 - Use of Hard-coded Credentials    MITRE, CWE-259 - Use of Hard-coded Password    CERT, MSC03-J. - Never hard code sensitive information    SANS Top 25 - Porous Defenses    Derived from FindSecBugs rule Hard Coded Password ",CIBERSEG:src/main/java/net/gencat/icass/valisa/struts/action/ValisaAction.java,1965,"CWE-798, CWE-259"
HIGH,auth,,,"'password' detected in this expression, review this potentially hard-coded credential.","Recommended Secure Coding Practices   Store the credentials in a configuration file that is not pushed to the code repository.    Store the credentials in a database.    Use the secret management service of you cloud provider.    If the a password has been disclosed through the source code: change it. Compliant SolutionConnection conn = null;try {  String uname = getEncryptedUser();  String password = getEncryptedPass();  conn = DriverManager.getConnection(""jdbc:mysql://localhost/test?"" +        ""user="" + uname + ""&amp;password="" + password);See   OWASP Top 10 2017 Category A2 - Broken Authentication    MITRE, CWE-798 - Use of Hard-coded Credentials    MITRE, CWE-259 - Use of Hard-coded Password    CERT, MSC03-J. - Never hard code sensitive information    SANS Top 25 - Porous Defenses    Derived from FindSecBugs rule Hard Coded Password ",CIBERSEG:src/main/java/net/gencat/icass/valisa/struts/action/ValisaAction.java,1969,"CWE-798, CWE-259"
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/ajaxtags-1.1.js,445,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-pagedSelect.js,729,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/ajax/behaviour/Behaviour.js,186,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/ajax/behaviour/canigo-behaviour.js,205,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/ajax/json/json.js,114,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/dojo/dojo.js,811,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/dojo/dojo.js,962,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/dojo/dojo.js,1491,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/dojo/dojo.js,1502,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/dojo/dojo.js,1574,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/dojo/dojo.js,2411,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/dojo/dojo.js,3881,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/dojo/dojo.js,3941,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/dojo/dojo.js,4068,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/dojo/dojo.js,4402,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/masks/masks.js,129,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/masks/masks.js,201,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/scvv/Utils.js,20,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/advlink/jscripts/functions.js,214,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/advlink/jscripts/functions.js,220,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/flash/editor_plugin_src.js,147,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/flash/editor_plugin_src.js,149,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/paste/editor_plugin_src.js,161,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/paste/editor_plugin_src.js,171,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/paste/editor_plugin_src.js,177,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/paste/editor_plugin_src.js,181,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/paste/editor_plugin_src.js,186,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/paste/editor_plugin_src.js,188,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/themes/advanced/jscripts/color_picker.js,49,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,1476,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,1655,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,1834,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,1906,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,3742,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/utils/form_utils.js,146,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/utils/fat.js,82,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/wforms/wforms.js,671,CWE-624
MEDIUM,dos,,,Make sure that using a regular expression is safe here.,"Recommended Secure Coding PracticesCheck whether your regular expression engine (the algorithm executing your regular expression) has any known vulnerabilities. Search forvulnerability reports mentioning the one engine you're are using.Use if possible a library which is not vulnerable to Redos Attacks such as Google Re2.Remember also that a ReDos attack is possible if a user-provided regular expression is executed. This rule won't detect this kind of injection.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-624 - Executable Regular Expression Error     OWASP Regular expression Denial of Service - ReDoS ",CIBERSEG:src/main/webapp/scripts/wforms/wforms.js,675,CWE-624
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-editList.js,301,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-editList.js,413,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-editList.js,529,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-editList.js,566,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-editList.js,577,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-fields.js,168,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-searchPanel.js,125,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-searchPanel.js,407,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-tabs.js,142,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-validation.js,113,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-validation.js,135,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-validation.js,152,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-validation.js,168,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-validation.js,201,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-validation.js,217,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-validation.js,295,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-validation.js,601,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-validation.js,605,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-validation.js,613,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/engine.js,605,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/testsuite.js,359,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/ajax/json/json.js,116,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/ajax/prototype/prototype-1.3.1.js,166,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/ajax/prototype/prototype-1.3.1.js,355,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/dojo/dojo.js,96,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/dojo/dojo.js,455,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/interface/missatge.js,47,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/interface/missatge.js,56,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/interface/missatge.js,65,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/interface/missatge.js,291,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/interface/missatge.js,489,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/interface/missatge.js,603,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/masks/masks.js,540,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/masks/masks.js,540,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus3.js,58,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus3.js,81,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus3.js,94,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus3.js,120,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus3.js,121,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus3.js,122,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus3.js,123,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus3.js,174,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus3.js,187,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus3.js,202,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus3.js,284,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus3.js,327,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus3.js,352,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus3.js,353,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus3.js,353,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus3.js,413,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus3.js,424,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus3.js,432,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus3.js,451,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus3.js,468,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus4.js,45,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus4.js,51,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus4.js,82,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus4.js,119,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus4.js,121,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus4.js,122,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus4.js,220,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus4.js,241,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus4.js,242,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus4.js,243,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus4.js,258,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus4.js,267,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus4.js,270,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus4.js,336,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus4.js,337,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus4.js,339,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus4.js,340,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus4.js,373,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus4.js,374,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus4.js,375,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus4.js,387,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus4.js,388,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus4.js,395,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/menuExpandable.js,108,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/menu/tabs.js,13,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/Llistes.js,62,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/Llistes.js,164,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/Llistes.js,194,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/Llistes.js,195,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/Llistes.js,201,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/Llistes.js,203,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/Llistes.js,205,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/Llistes.js,223,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/Llistes.js,233,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/Llistes.js,240,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/Llistes.js,241,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/Llistes.js,249,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/Llistes.js,249,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/Llistes.js,253,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/Llistes.js,254,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/Llistes.js,261,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/Llistes.js,263,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/Llistes.js,265,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/MetadadesTipusdoc.js,79,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/MetadadesTipusdoc.js,185,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/MetadadesTipusdoc.js,207,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/MetadadesTipusdoc.js,217,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/MetadadesTipusdoc.js,218,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/MetadadesTipusdoc.js,218,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/ValidacionsExternesTipusdoc.js,74,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/ValidacionsExternesTipusdoc.js,189,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/ValidacionsExternesTipusdoc.js,225,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/ValidacionsExternesTipusdoc.js,235,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/ValidacionsExternesTipusdoc.js,236,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/scvv/ValidacionsExternesTipusdoc.js,236,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptDOM.js,83,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptDOM.js,84,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptDOM.js,85,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptDOM.js,88,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptDOM.js,92,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptDOM.js,95,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptDOM.js,99,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptDOM.js,106,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptDOM.js,107,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptDOM.js,118,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptDOM.js,118,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptDOM.js,165,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptDOM.js,179,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptDOM.js,242,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptDOM.js,243,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptDOM.js,244,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptDOM.js,281,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptDOM.js,636,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptDOM.js,691,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptIE4.js,79,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptIE4.js,80,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptIE4.js,81,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptIE4.js,84,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptIE4.js,88,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptIE4.js,91,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptIE4.js,95,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptIE4.js,102,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptIE4.js,103,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptIE4.js,114,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptIE4.js,114,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptIE4.js,138,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptIE4.js,166,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptIE4.js,180,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptIE4.js,260,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptIE4.js,261,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptIE4.js,262,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptIE4.js,276,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptIE4.js,277,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptIE4.js,287,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptIE4.js,288,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptIE4.js,294,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptIE4.js,601,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptIE4.js,656,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,78,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,79,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,80,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,83,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,87,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,90,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,94,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,101,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,102,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,113,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,113,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,202,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,216,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,280,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,282,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,284,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,285,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,313,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,315,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,317,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,347,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,348,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,349,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,434,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,559,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,617,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/HM_ScriptNS4.js,624,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/datagrid.js,217,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/struts-layout/javascript.js,1142,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/tabuladors.js,132,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/tabuladors.js,137,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/tabuladors.js,138,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/tabuladors.js,142,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/advimage/editor_plugin_src.js,72,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/advimage/editor_plugin_src.js,77,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/advimage/jscripts/functions.js,21,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/advimage/jscripts/functions.js,226,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/advlink/jscripts/functions.js,135,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/advlink/jscripts/functions.js,372,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/contextmenu/editor_plugin_src.js,308,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/flash/editor_plugin_src.js,99,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/flash/editor_plugin_src.js,134,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/inlinepopups/editor_plugin_src.js,420,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/themes/advanced/editor_template_src.js,517,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/themes/advanced/editor_template_src.js,519,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/themes/advanced/jscripts/about.js,49,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_popup.js,86,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_popup.js,94,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_popup.js,234,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_popup.js,237,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,386,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,1573,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,1581,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,1581,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,1620,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,1687,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,1768,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,2452,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,2478,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,2491,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,2532,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,2535,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,2538,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,3054,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,3055,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,3060,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,3061,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,3342,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,3693,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,3777,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,3778,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,3784,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,3794,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,3795,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,3802,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,3803,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,3819,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,3831,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,3847,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,5156,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,5161,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,5226,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,5229,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,5232,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,5238,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,5586,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,5587,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,5590,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,5591,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,5594,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,5599,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,5606,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/utils/form_utils.js,200,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/tooltips/dom_tooltip/domLib.js,629,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/tooltips/dom_tooltip/domLib.js,635,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/tooltips/dom_tooltip/domTT.js,1040,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/tooltips/wz_tooltip/wz_tooltip.js,448,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/tooltips/wz_tooltip/wz_tooltip.js,456,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/wforms/wforms.js,472,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/wforms/wforms.js,768,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/wforms/wforms.js,951,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/wforms/wforms.js,953,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/wforms/wforms.js,958,CWE-95
MEDIUM,rce,,,Make sure that this dynamic injection or execution of code is safe.,"Recommended Secure Coding PracticesRegarding the execution of unknown code, the best solution is to not run code provided by an untrusted source. If you really need to do it, run thecode in a sandboxed environment. Use jails, firewalls and whatever means youroperating system and programming language provide (example: Security Managers in java, iframes and same-originpolicy for javascript in a web browser).Do not try to create a blacklist of dangerous code. It is impossible to cover all attacks that way.Avoid using dynamic code APIs whenever possible. Hard-coded code is always safer.See   OWASP Top 10 2017 Category A1 - Injection    MITRE CWE-95 - Improper Neutralization of Directives in Dynamically Evaluated Code  ('Eval Injection') ",CIBERSEG:src/main/webapp/scripts/wforms/wforms.js,960,CWE-95
MEDIUM,weak-cryptography,,,Make sure that using this pseudorandom number generator is safe here.,"Recommended Secure Coding Practices   Use a cryptographically strong random number generator (RNG) like ""java.security.SecureRandom"" in place of this PRNG.    Use the generated random values only once.    You should not expose the generated random value. If you have to store it, make sure that the database or file is secure. Compliant SolutionSecureRandom random = new SecureRandom(); // Compliant for security-sensitive use casesbyte bytes[] = new byte[20];random.nextBytes(bytes);See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-338 - Use of Cryptographically Weak Pseudo-Random Number Generator  (PRNG)    MITRE, CWE-330 - Use of Insufficiently Random Values    MITRE, CWE-326 - Inadequate Encryption Strength    CERT, MSC02-J. - Generate strong random numbers    CERT, MSC30-C. - Do not use the rand() function for generating pseudorandom  numbers    CERT, MSC50-CPP. - Do not use std::rand() for generating pseudorandom  numbers    Derived from FindSecBugs rule Predictable Pseudo Random Number  Generator ",CIBERSEG:src/main/java/net/gencat/icass/valisa/security/utils/StringGenerator.java,32,"CWE-338, CWE-330, CWE-326"
MEDIUM,weak-cryptography,,,Make sure that using this pseudorandom number generator is safe here.,"Recommended Secure Coding Practices   Use a cryptographically strong pseudorandom number generator (CSPRNG) like crypto.getRandomValues().    Use the generated random values only once.    You should not expose the generated random value. If you have to store it, make sure that the database or file is secure. Compliant Solution// === Client side ===const crypto = window.crypto || window.msCrypto;var array = new Uint32Array(1);crypto.getRandomValues(array); // Compliant for security-sensitive use cases// === Server side ===const crypto = require('crypto');const buf = crypto.randomBytes(1); // Compliant for security-sensitive use casesSee   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-338 - Use of Cryptographically Weak Pseudo-Random Number Generator  (PRNG)    MITRE, CWE-330 - Use of Insufficiently Random Values    MITRE, CWE-326 - Inadequate Encryption Strength    CERT, MSC02-J. - Generate strong random numbers    CERT, MSC30-C. - Do not use the rand() function for generating pseudorandom  numbers    CERT, MSC50-CPP. - Do not use std::rand() for generating pseudorandom  numbers    Derived from FindSecBugs rule Predictable Pseudo Random Number  Generator ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/engine.js,414,"CWE-338, CWE-330, CWE-326"
MEDIUM,weak-cryptography,,,Make sure that using this pseudorandom number generator is safe here.,"Recommended Secure Coding Practices   Use a cryptographically strong pseudorandom number generator (CSPRNG) like crypto.getRandomValues().    Use the generated random values only once.    You should not expose the generated random value. If you have to store it, make sure that the database or file is secure. Compliant Solution// === Client side ===const crypto = window.crypto || window.msCrypto;var array = new Uint32Array(1);crypto.getRandomValues(array); // Compliant for security-sensitive use cases// === Server side ===const crypto = require('crypto');const buf = crypto.randomBytes(1); // Compliant for security-sensitive use casesSee   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-338 - Use of Cryptographically Weak Pseudo-Random Number Generator  (PRNG)    MITRE, CWE-330 - Use of Insufficiently Random Values    MITRE, CWE-326 - Inadequate Encryption Strength    CERT, MSC02-J. - Generate strong random numbers    CERT, MSC30-C. - Do not use the rand() function for generating pseudorandom  numbers    CERT, MSC50-CPP. - Do not use std::rand() for generating pseudorandom  numbers    Derived from FindSecBugs rule Predictable Pseudo Random Number  Generator ",CIBERSEG:src/main/webapp/scripts/ajax/effects.js,43,"CWE-338, CWE-330, CWE-326"
MEDIUM,weak-cryptography,,,Make sure that using this pseudorandom number generator is safe here.,"Recommended Secure Coding Practices   Use a cryptographically strong pseudorandom number generator (CSPRNG) like crypto.getRandomValues().    Use the generated random values only once.    You should not expose the generated random value. If you have to store it, make sure that the database or file is secure. Compliant Solution// === Client side ===const crypto = window.crypto || window.msCrypto;var array = new Uint32Array(1);crypto.getRandomValues(array); // Compliant for security-sensitive use cases// === Server side ===const crypto = require('crypto');const buf = crypto.randomBytes(1); // Compliant for security-sensitive use casesSee   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-338 - Use of Cryptographically Weak Pseudo-Random Number Generator  (PRNG)    MITRE, CWE-330 - Use of Insufficiently Random Values    MITRE, CWE-326 - Inadequate Encryption Strength    CERT, MSC02-J. - Generate strong random numbers    CERT, MSC30-C. - Do not use the rand() function for generating pseudorandom  numbers    CERT, MSC50-CPP. - Do not use std::rand() for generating pseudorandom  numbers    Derived from FindSecBugs rule Predictable Pseudo Random Number  Generator ",CIBERSEG:src/main/webapp/scripts/wforms/wforms.js,1002,"CWE-338, CWE-330, CWE-326"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant SolutionLoggers should be used (instead of printStackTrace) to print throwables:try {  /* ... */} catch(Exception e) {  LOGGER.log(""context"", e); // Compliant}EnableWebSecurityannotation for SpringFramework with debug to false disable debugging support:import org.springframework.context.annotation.Configuration;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;@Configuration@EnableWebSecurity(debug = false) // Compliantpublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {  // ...}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/java/cat/gencat/excel/services/GenerarPdfExp.java,321,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant SolutionLoggers should be used (instead of printStackTrace) to print throwables:try {  /* ... */} catch(Exception e) {  LOGGER.log(""context"", e); // Compliant}EnableWebSecurityannotation for SpringFramework with debug to false disable debugging support:import org.springframework.context.annotation.Configuration;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;@Configuration@EnableWebSecurity(debug = false) // Compliantpublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {  // ...}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/java/cat/gencat/excel/services/GenerarPdfExp.java,578,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant SolutionLoggers should be used (instead of printStackTrace) to print throwables:try {  /* ... */} catch(Exception e) {  LOGGER.log(""context"", e); // Compliant}EnableWebSecurityannotation for SpringFramework with debug to false disable debugging support:import org.springframework.context.annotation.Configuration;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;@Configuration@EnableWebSecurity(debug = false) // Compliantpublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {  // ...}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/java/net/gencat/icass/valisa/model/bo/impl/CanviPasswordBOImpl.java,85,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant SolutionLoggers should be used (instead of printStackTrace) to print throwables:try {  /* ... */} catch(Exception e) {  LOGGER.log(""context"", e); // Compliant}EnableWebSecurityannotation for SpringFramework with debug to false disable debugging support:import org.springframework.context.annotation.Configuration;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;@Configuration@EnableWebSecurity(debug = false) // Compliantpublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {  // ...}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/java/net/gencat/icass/valisa/model/bo/impl/UsuariBOImpl.java,822,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant SolutionLoggers should be used (instead of printStackTrace) to print throwables:try {  /* ... */} catch(Exception e) {  LOGGER.log(""context"", e); // Compliant}EnableWebSecurityannotation for SpringFramework with debug to false disable debugging support:import org.springframework.context.annotation.Configuration;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;@Configuration@EnableWebSecurity(debug = false) // Compliantpublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {  // ...}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/java/net/gencat/icass/valisa/security/ValisaAuthenticationProvider.java,220,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant SolutionLoggers should be used (instead of printStackTrace) to print throwables:try {  /* ... */} catch(Exception e) {  LOGGER.log(""context"", e); // Compliant}EnableWebSecurityannotation for SpringFramework with debug to false disable debugging support:import org.springframework.context.annotation.Configuration;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;@Configuration@EnableWebSecurity(debug = false) // Compliantpublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {  // ...}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/java/net/gencat/icass/valisa/security/ValisaAuthenticationProvider.java,277,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant SolutionLoggers should be used (instead of printStackTrace) to print throwables:try {  /* ... */} catch(Exception e) {  LOGGER.log(""context"", e); // Compliant}EnableWebSecurityannotation for SpringFramework with debug to false disable debugging support:import org.springframework.context.annotation.Configuration;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;@Configuration@EnableWebSecurity(debug = false) // Compliantpublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {  // ...}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/java/net/gencat/icass/valisa/security/ValisaAuthenticationProvider.java,307,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant SolutionLoggers should be used (instead of printStackTrace) to print throwables:try {  /* ... */} catch(Exception e) {  LOGGER.log(""context"", e); // Compliant}EnableWebSecurityannotation for SpringFramework with debug to false disable debugging support:import org.springframework.context.annotation.Configuration;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;@Configuration@EnableWebSecurity(debug = false) // Compliantpublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {  // ...}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/java/net/gencat/icass/valisa/security/ValisaAuthenticationProvider.java,339,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant SolutionLoggers should be used (instead of printStackTrace) to print throwables:try {  /* ... */} catch(Exception e) {  LOGGER.log(""context"", e); // Compliant}EnableWebSecurityannotation for SpringFramework with debug to false disable debugging support:import org.springframework.context.annotation.Configuration;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;@Configuration@EnableWebSecurity(debug = false) // Compliantpublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {  // ...}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/java/net/gencat/icass/valisa/security/ValisaAuthenticationProvider.java,373,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant SolutionLoggers should be used (instead of printStackTrace) to print throwables:try {  /* ... */} catch(Exception e) {  LOGGER.log(""context"", e); // Compliant}EnableWebSecurityannotation for SpringFramework with debug to false disable debugging support:import org.springframework.context.annotation.Configuration;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;@Configuration@EnableWebSecurity(debug = false) // Compliantpublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {  // ...}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/java/net/gencat/icass/valisa/security/ValisaAuthenticationProvider.java,420,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant SolutionLoggers should be used (instead of printStackTrace) to print throwables:try {  /* ... */} catch(Exception e) {  LOGGER.log(""context"", e); // Compliant}EnableWebSecurityannotation for SpringFramework with debug to false disable debugging support:import org.springframework.context.annotation.Configuration;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;@Configuration@EnableWebSecurity(debug = false) // Compliantpublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {  // ...}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/java/net/gencat/icass/valisa/security/ValisaAuthenticationProvider.java,464,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant SolutionLoggers should be used (instead of printStackTrace) to print throwables:try {  /* ... */} catch(Exception e) {  LOGGER.log(""context"", e); // Compliant}EnableWebSecurityannotation for SpringFramework with debug to false disable debugging support:import org.springframework.context.annotation.Configuration;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;@Configuration@EnableWebSecurity(debug = false) // Compliantpublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {  // ...}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/java/net/gencat/icass/valisa/struts/excel/InformePerGeneracioXls.java,223,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant SolutionLoggers should be used (instead of printStackTrace) to print throwables:try {  /* ... */} catch(Exception e) {  LOGGER.log(""context"", e); // Compliant}EnableWebSecurityannotation for SpringFramework with debug to false disable debugging support:import org.springframework.context.annotation.Configuration;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;@Configuration@EnableWebSecurity(debug = false) // Compliantpublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {  // ...}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/java/net/gencat/icass/valisa/webservices/impl/GeoNamesServiceImpl.java,47,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant SolutionLoggers should be used (instead of printStackTrace) to print throwables:try {  /* ... */} catch(Exception e) {  LOGGER.log(""context"", e); // Compliant}EnableWebSecurityannotation for SpringFramework with debug to false disable debugging support:import org.springframework.context.annotation.Configuration;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;@Configuration@EnableWebSecurity(debug = false) // Compliantpublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {  // ...}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/java/net/gencat/icass/valisa/webservices/impl/GeoNamesServiceImpl.java,51,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant SolutionLoggers should be used (instead of printStackTrace) to print throwables:try {  /* ... */} catch(Exception e) {  LOGGER.log(""context"", e); // Compliant}EnableWebSecurityannotation for SpringFramework with debug to false disable debugging support:import org.springframework.context.annotation.Configuration;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;@Configuration@EnableWebSecurity(debug = false) // Compliantpublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {  // ...}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/test/net/gencat/icass/valisa/webservices/test/TestRESTfulService.java,38,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant SolutionLoggers should be used (instead of printStackTrace) to print throwables:try {  /* ... */} catch(Exception e) {  LOGGER.log(""context"", e); // Compliant}EnableWebSecurityannotation for SpringFramework with debug to false disable debugging support:import org.springframework.context.annotation.Configuration;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;@Configuration@EnableWebSecurity(debug = false) // Compliantpublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {  // ...}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/test/net/gencat/icass/valisa/webservices/test/TestRESTfulService.java,42,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure that cookie is written safely here.,"Recommended Secure Coding PracticesCookies should only be used to manage the user session. The best practice is to keep all user-related information server-side and link them to theuser session, never sending them to the client. In a very few corner cases, cookies can be used for non-sensitive information that need to live longerthan the user session.Do not try to encode sensitive information in a non human-readable format before writing them in a cookie. The encoding can be reverted and theoriginal information will be exposed.Using cookies only for session IDs doesn't make them secure. Follow OWASP best practices when you configure your cookies.As a side note, every information read from a cookie should be Sanitized.See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-312 - Cleartext Storage of Sensitive Information    MITRE, CWE-315 - Cleartext Storage of Sensitive Information in a Cookie    CERT,  FIO52-J. - Do not store unencrypted sensitive information on the client side    Derived from FindSecBugs rule COOKIE_USAGE ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/ajaxtags-1.1.js,98,"CWE-312, CWE-315"
LOW,insecure-conf,,,Make sure that cookie is written safely here.,"Recommended Secure Coding PracticesCookies should only be used to manage the user session. The best practice is to keep all user-related information server-side and link them to theuser session, never sending them to the client. In a very few corner cases, cookies can be used for non-sensitive information that need to live longerthan the user session.Do not try to encode sensitive information in a non human-readable format before writing them in a cookie. The encoding can be reverted and theoriginal information will be exposed.Using cookies only for session IDs doesn't make them secure. Follow OWASP best practices when you configure your cookies.As a side note, every information read from a cookie should be Sanitized.See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-312 - Cleartext Storage of Sensitive Information    MITRE, CWE-315 - Cleartext Storage of Sensitive Information in a Cookie    CERT,  FIO52-J. - Do not store unencrypted sensitive information on the client side    Derived from FindSecBugs rule COOKIE_USAGE ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/ajaxtags-1.1.js,108,"CWE-312, CWE-315"
LOW,insecure-conf,,,Make sure that cookie is written safely here.,"Recommended Secure Coding PracticesCookies should only be used to manage the user session. The best practice is to keep all user-related information server-side and link them to theuser session, never sending them to the client. In a very few corner cases, cookies can be used for non-sensitive information that need to live longerthan the user session.Do not try to encode sensitive information in a non human-readable format before writing them in a cookie. The encoding can be reverted and theoriginal information will be exposed.Using cookies only for session IDs doesn't make them secure. Follow OWASP best practices when you configure your cookies.As a side note, every information read from a cookie should be Sanitized.See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-312 - Cleartext Storage of Sensitive Information    MITRE, CWE-315 - Cleartext Storage of Sensitive Information in a Cookie    CERT,  FIO52-J. - Do not store unencrypted sensitive information on the client side    Derived from FindSecBugs rule COOKIE_USAGE ",CIBERSEG:src/main/webapp/scripts/menu/cookies.js,6,"CWE-312, CWE-315"
LOW,insecure-conf,,,Make sure that cookie is written safely here.,"Recommended Secure Coding PracticesCookies should only be used to manage the user session. The best practice is to keep all user-related information server-side and link them to theuser session, never sending them to the client. In a very few corner cases, cookies can be used for non-sensitive information that need to live longerthan the user session.Do not try to encode sensitive information in a non human-readable format before writing them in a cookie. The encoding can be reverted and theoriginal information will be exposed.Using cookies only for session IDs doesn't make them secure. Follow OWASP best practices when you configure your cookies.As a side note, every information read from a cookie should be Sanitized.See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-312 - Cleartext Storage of Sensitive Information    MITRE, CWE-315 - Cleartext Storage of Sensitive Information in a Cookie    CERT,  FIO52-J. - Do not store unencrypted sensitive information on the client side    Derived from FindSecBugs rule COOKIE_USAGE ",CIBERSEG:src/main/webapp/scripts/menu/cookies.js,33,"CWE-312, CWE-315"
LOW,insecure-conf,,,Make sure that cookie is written safely here.,"Recommended Secure Coding PracticesCookies should only be used to manage the user session. The best practice is to keep all user-related information server-side and link them to theuser session, never sending them to the client. In a very few corner cases, cookies can be used for non-sensitive information that need to live longerthan the user session.Do not try to encode sensitive information in a non human-readable format before writing them in a cookie. The encoding can be reverted and theoriginal information will be exposed.Using cookies only for session IDs doesn't make them secure. Follow OWASP best practices when you configure your cookies.As a side note, every information read from a cookie should be Sanitized.See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-312 - Cleartext Storage of Sensitive Information    MITRE, CWE-315 - Cleartext Storage of Sensitive Information in a Cookie    CERT,  FIO52-J. - Do not store unencrypted sensitive information on the client side    Derived from FindSecBugs rule COOKIE_USAGE ",CIBERSEG:src/main/webapp/scripts/menu/menuExpandable.js,201,"CWE-312, CWE-315"
LOW,insecure-conf,,,Make sure that cookie is written safely here.,"Recommended Secure Coding PracticesCookies should only be used to manage the user session. The best practice is to keep all user-related information server-side and link them to theuser session, never sending them to the client. In a very few corner cases, cookies can be used for non-sensitive information that need to live longerthan the user session.Do not try to encode sensitive information in a non human-readable format before writing them in a cookie. The encoding can be reverted and theoriginal information will be exposed.Using cookies only for session IDs doesn't make them secure. Follow OWASP best practices when you configure your cookies.As a side note, every information read from a cookie should be Sanitized.See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-312 - Cleartext Storage of Sensitive Information    MITRE, CWE-315 - Cleartext Storage of Sensitive Information in a Cookie    CERT,  FIO52-J. - Do not store unencrypted sensitive information on the client side    Derived from FindSecBugs rule COOKIE_USAGE ",CIBERSEG:src/main/webapp/scripts/menu/menuExpandable.js,228,"CWE-312, CWE-315"
LOW,insecure-conf,,,Make sure that cookie is written safely here.,"Recommended Secure Coding PracticesCookies should only be used to manage the user session. The best practice is to keep all user-related information server-side and link them to theuser session, never sending them to the client. In a very few corner cases, cookies can be used for non-sensitive information that need to live longerthan the user session.Do not try to encode sensitive information in a non human-readable format before writing them in a cookie. The encoding can be reverted and theoriginal information will be exposed.Using cookies only for session IDs doesn't make them secure. Follow OWASP best practices when you configure your cookies.As a side note, every information read from a cookie should be Sanitized.See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-312 - Cleartext Storage of Sensitive Information    MITRE, CWE-315 - Cleartext Storage of Sensitive Information in a Cookie    CERT,  FIO52-J. - Do not store unencrypted sensitive information on the client side    Derived from FindSecBugs rule COOKIE_USAGE ",CIBERSEG:src/main/webapp/scripts/menu/nicetabs.js,64,"CWE-312, CWE-315"
LOW,insecure-conf,,,Make sure that cookie is written safely here.,"Recommended Secure Coding PracticesCookies should only be used to manage the user session. The best practice is to keep all user-related information server-side and link them to theuser session, never sending them to the client. In a very few corner cases, cookies can be used for non-sensitive information that need to live longerthan the user session.Do not try to encode sensitive information in a non human-readable format before writing them in a cookie. The encoding can be reverted and theoriginal information will be exposed.Using cookies only for session IDs doesn't make them secure. Follow OWASP best practices when you configure your cookies.As a side note, every information read from a cookie should be Sanitized.See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-312 - Cleartext Storage of Sensitive Information    MITRE, CWE-315 - Cleartext Storage of Sensitive Information in a Cookie    CERT,  FIO52-J. - Do not store unencrypted sensitive information on the client side    Derived from FindSecBugs rule COOKIE_USAGE ",CIBERSEG:src/main/webapp/scripts/menu/nicetabs.js,91,"CWE-312, CWE-315"
LOW,insecure-conf,,,Make sure that cookie is written safely here.,"Recommended Secure Coding PracticesCookies should only be used to manage the user session. The best practice is to keep all user-related information server-side and link them to theuser session, never sending them to the client. In a very few corner cases, cookies can be used for non-sensitive information that need to live longerthan the user session.Do not try to encode sensitive information in a non human-readable format before writing them in a cookie. The encoding can be reverted and theoriginal information will be exposed.Using cookies only for session IDs doesn't make them secure. Follow OWASP best practices when you configure your cookies.As a side note, every information read from a cookie should be Sanitized.See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-312 - Cleartext Storage of Sensitive Information    MITRE, CWE-315 - Cleartext Storage of Sensitive Information in a Cookie    CERT,  FIO52-J. - Do not store unencrypted sensitive information on the client side    Derived from FindSecBugs rule COOKIE_USAGE ",CIBERSEG:src/main/webapp/scripts/menu/tabs.js,72,"CWE-312, CWE-315"
LOW,insecure-conf,,,Make sure that cookie is written safely here.,"Recommended Secure Coding PracticesCookies should only be used to manage the user session. The best practice is to keep all user-related information server-side and link them to theuser session, never sending them to the client. In a very few corner cases, cookies can be used for non-sensitive information that need to live longerthan the user session.Do not try to encode sensitive information in a non human-readable format before writing them in a cookie. The encoding can be reverted and theoriginal information will be exposed.Using cookies only for session IDs doesn't make them secure. Follow OWASP best practices when you configure your cookies.As a side note, every information read from a cookie should be Sanitized.See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-312 - Cleartext Storage of Sensitive Information    MITRE, CWE-315 - Cleartext Storage of Sensitive Information in a Cookie    CERT,  FIO52-J. - Do not store unencrypted sensitive information on the client side    Derived from FindSecBugs rule COOKIE_USAGE ",CIBERSEG:src/main/webapp/scripts/menu/tabs.js,99,"CWE-312, CWE-315"
LOW,insecure-conf,,,Make sure that cookie is written safely here.,"Recommended Secure Coding PracticesCookies should only be used to manage the user session. The best practice is to keep all user-related information server-side and link them to theuser session, never sending them to the client. In a very few corner cases, cookies can be used for non-sensitive information that need to live longerthan the user session.Do not try to encode sensitive information in a non human-readable format before writing them in a cookie. The encoding can be reverted and theoriginal information will be exposed.Using cookies only for session IDs doesn't make them secure. Follow OWASP best practices when you configure your cookies.As a side note, every information read from a cookie should be Sanitized.See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-312 - Cleartext Storage of Sensitive Information    MITRE, CWE-315 - Cleartext Storage of Sensitive Information in a Cookie    CERT,  FIO52-J. - Do not store unencrypted sensitive information on the client side    Derived from FindSecBugs rule COOKIE_USAGE ",CIBERSEG:src/main/webapp/scripts/menu/xtree.js,125,"CWE-312, CWE-315"
LOW,insecure-conf,,,Make sure that cookie is written safely here.,"Recommended Secure Coding PracticesCookies should only be used to manage the user session. The best practice is to keep all user-related information server-side and link them to theuser session, never sending them to the client. In a very few corner cases, cookies can be used for non-sensitive information that need to live longerthan the user session.Do not try to encode sensitive information in a non human-readable format before writing them in a cookie. The encoding can be reverted and theoriginal information will be exposed.Using cookies only for session IDs doesn't make them secure. Follow OWASP best practices when you configure your cookies.As a side note, every information read from a cookie should be Sanitized.See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-312 - Cleartext Storage of Sensitive Information    MITRE, CWE-315 - Cleartext Storage of Sensitive Information in a Cookie    CERT,  FIO52-J. - Do not store unencrypted sensitive information on the client side    Derived from FindSecBugs rule COOKIE_USAGE ",CIBERSEG:src/main/webapp/scripts/struts-layout/javascript.js,191,"CWE-312, CWE-315"
LOW,insecure-conf,,,Make sure that cookie is written safely here.,"Recommended Secure Coding PracticesCookies should only be used to manage the user session. The best practice is to keep all user-related information server-side and link them to theuser session, never sending them to the client. In a very few corner cases, cookies can be used for non-sensitive information that need to live longerthan the user session.Do not try to encode sensitive information in a non human-readable format before writing them in a cookie. The encoding can be reverted and theoriginal information will be exposed.Using cookies only for session IDs doesn't make them secure. Follow OWASP best practices when you configure your cookies.As a side note, every information read from a cookie should be Sanitized.See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-312 - Cleartext Storage of Sensitive Information    MITRE, CWE-315 - Cleartext Storage of Sensitive Information in a Cookie    CERT,  FIO52-J. - Do not store unencrypted sensitive information on the client side    Derived from FindSecBugs rule COOKIE_USAGE ",CIBERSEG:src/main/webapp/scripts/struts-layout/javascript.js,201,"CWE-312, CWE-315"
LOW,insecure-conf,,,Make sure that cookie is written safely here.,"Recommended Secure Coding PracticesCookies should only be used to manage the user session. The best practice is to keep all user-related information server-side and link them to theuser session, never sending them to the client. In a very few corner cases, cookies can be used for non-sensitive information that need to live longerthan the user session.Do not try to encode sensitive information in a non human-readable format before writing them in a cookie. The encoding can be reverted and theoriginal information will be exposed.Using cookies only for session IDs doesn't make them secure. Follow OWASP best practices when you configure your cookies.As a side note, every information read from a cookie should be Sanitized.See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-312 - Cleartext Storage of Sensitive Information    MITRE, CWE-315 - Cleartext Storage of Sensitive Information in a Cookie    CERT,  FIO52-J. - Do not store unencrypted sensitive information on the client side    Derived from FindSecBugs rule COOKIE_USAGE ",CIBERSEG:src/main/webapp/scripts/struts-layout/javascript.js,206,"CWE-312, CWE-315"
LOW,insecure-conf,,,Make sure that cookie is written safely here.,"Recommended Secure Coding PracticesCookies should only be used to manage the user session. The best practice is to keep all user-related information server-side and link them to theuser session, never sending them to the client. In a very few corner cases, cookies can be used for non-sensitive information that need to live longerthan the user session.Do not try to encode sensitive information in a non human-readable format before writing them in a cookie. The encoding can be reverted and theoriginal information will be exposed.Using cookies only for session IDs doesn't make them secure. Follow OWASP best practices when you configure your cookies.As a side note, every information read from a cookie should be Sanitized.See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-312 - Cleartext Storage of Sensitive Information    MITRE, CWE-315 - Cleartext Storage of Sensitive Information in a Cookie    CERT,  FIO52-J. - Do not store unencrypted sensitive information on the client side    Derived from FindSecBugs rule COOKIE_USAGE ",CIBERSEG:src/main/webapp/scripts/struts-layout/javascript.js,209,"CWE-312, CWE-315"
LOW,insecure-conf,,,Make sure that cookie is written safely here.,"Recommended Secure Coding PracticesCookies should only be used to manage the user session. The best practice is to keep all user-related information server-side and link them to theuser session, never sending them to the client. In a very few corner cases, cookies can be used for non-sensitive information that need to live longerthan the user session.Do not try to encode sensitive information in a non human-readable format before writing them in a cookie. The encoding can be reverted and theoriginal information will be exposed.Using cookies only for session IDs doesn't make them secure. Follow OWASP best practices when you configure your cookies.As a side note, every information read from a cookie should be Sanitized.See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-312 - Cleartext Storage of Sensitive Information    MITRE, CWE-315 - Cleartext Storage of Sensitive Information in a Cookie    CERT,  FIO52-J. - Do not store unencrypted sensitive information on the client side    Derived from FindSecBugs rule COOKIE_USAGE ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/themes/advanced/editor_template_src.js,610,"CWE-312, CWE-315"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-editList.js,64,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-editList.js,130,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-editList.js,145,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-editList.js,188,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-editList.js,200,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-editList.js,222,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-editList.js,233,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-editList.js,251,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-editList.js,400,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-editList.js,512,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-editList.js,531,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-editList.js,538,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-editList.js,543,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-editList.js,592,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-editList.js,605,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-editList.js,668,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-editList.js,685,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-pagedSelect.js,132,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-pagedSelect.js,304,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-pagedSelect.js,654,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-searchPanel.js,87,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-searchPanel.js,260,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-searchPanel.js,327,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-searchPanel.js,727,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-tabs.js,136,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-validation.js,162,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-validation.js,622,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-validation.js,678,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-validation.js,732,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/ajaxtags/canigo-ajaxtags-validation.js,881,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/behaviour/Behaviour.js,68,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/behaviour/canigo-behaviour.js,121,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/controls.js,479,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/deprecated.js,154,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/deprecated.js,190,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/deprecated.js,209,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/deprecated.js,227,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/deprecated.js,292,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/deprecated.js,352,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/engine.js,178,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/engine.js,181,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/engine.js,681,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/engine.js,711,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/engine.js,722,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/index.js,3,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/index.js,4,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/scvv/MissatgeAction.js,131,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/scvv/MissatgeAction.js,137,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/scvv/MissatgeAction.js,139,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/scvv/MissatgeAction.js,142,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/scvv/MissatgeAction.js,147,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/scvv/MissatgeAction.js,164,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/scvv/MissatgeAction.js,195,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/scvv/MissatgeAction.js,200,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/scvv/MissatgeAction.js,202,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/scvv/MissatgeAction.js,205,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/scvv/MissatgeAction.js,209,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/scvv/MissatgeAction.js,222,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/scvv/MissatgeAction.js,237,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/scvv/MissatgeAction.js,259,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/scvv/MissatgeAction.js,265,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/scvv/MissatgeAction.js,288,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/testsuite.js,398,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/util.js,50,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/util.js,311,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/util.js,456,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/util.js,533,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/util.js,592,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/util.js,597,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/util.js,699,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/util.js,705,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/util.js,758,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/util.js,795,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/util.js,801,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/util.js,849,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/util.js,853,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/util.js,930,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/util.js,934,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/ajax/dwr/util.js,971,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/calendars/dynarch/calendar-setup.js,101,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/calendars/dynarch/calendar-setup.js,129,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/calendars/dynarch/calendar.js,641,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/dojo/canigo-dirtyFormWarning-tag.js,26,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/dojo/canigo-dirtyFormWarning-tag.js,48,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/interface/missatge.js,100,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/interface/missatge.js,121,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/interface/missatge.js,131,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/interface/missatge.js,141,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/interface/missatge.js,150,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/interface/missatge.js,160,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/interface/missatge.js,170,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/interface/missatge.js,177,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/interface/missatge.js,189,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/interface/missatge.js,198,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/interface/missatge.js,205,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/interface/missatge.js,217,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/interface/missatge.js,226,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/interface/missatge.js,234,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/interface/missatge.js,253,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/interface/missatge.js,262,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/interface/missatge.js,424,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/interface/missatge.js,544,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus3.js,58,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/menu/coolmenus4.js,39,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/General.js,61,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Organitzacions.js,46,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Plantilles.js,50,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/ReceptorsMultiples.js,34,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/ReceptorsMultiples.js,46,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Utils.js,55,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,30,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,39,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,60,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,64,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,74,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,78,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,82,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,92,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,96,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,100,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,104,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,114,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,118,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,122,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,126,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,136,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,140,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,144,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,148,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,152,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,162,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,166,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,174,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,178,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,188,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,192,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,196,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,200,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,204,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,208,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,273,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/scvv/Valisa.js,285,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/struts-layout/javascript.js,21,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/struts-layout/javascript.js,30,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/struts-layout/javascript.js,44,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/struts-layout/javascript.js,55,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/struts-layout/javascript.js,1062,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/struts-layout/javascript.js,1070,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/struts/mainScript.js,115,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/swap/canigo-options-tag.js,45,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/_template/editor_plugin.js,21,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/_template/editor_plugin.js,59,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/_template/editor_plugin.js,89,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/_template/editor_plugin.js,96,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/_template/editor_plugin.js,103,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/_template/editor_plugin.js,110,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/_template/editor_plugin_src.js,34,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/_template/editor_plugin_src.js,73,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/_template/editor_plugin_src.js,103,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/_template/editor_plugin_src.js,110,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/_template/editor_plugin_src.js,117,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/_template/editor_plugin_src.js,124,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/advimage/jscripts/functions.js,264,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/iespell/editor_plugin_src.js,38,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/iespell/editor_plugin_src.js,41,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/save/editor_plugin_src.js,50,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/searchreplace/editor_plugin_src.js,117,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/searchreplace/editor_plugin_src.js,143,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/searchreplace/editor_plugin_src.js,156,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/searchreplace/editor_plugin_src.js,166,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/searchreplace/editor_plugin_src.js,172,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/searchreplace/editor_plugin_src.js,177,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/table/editor_plugin_src.js,888,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/table/editor_plugin_src.js,909,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/table/editor_plugin_src.js,933,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/plugins/table/jscripts/cell.js,69,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/themes/advanced/editor_template_src.js,274,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/themes/advanced/editor_template_src.js,524,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_popup.js,30,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_popup.js,235,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,229,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,314,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,537,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,1349,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,3168,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,3195,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,5090,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,5095,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,5581,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/textareas/tiny_mce/tiny_mce_src.js,5595,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/utils/accesskey.js,122,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/utils/canigo-accesskey.js,124,"CWE-489, CWE-215"
LOW,insecure-conf,,,Make sure this debug feature is deactivated before delivering the code in production.,"Recommended Secure Coding PracticesDo not enable debug features on production servers.Compliant Solutionerrorhandler Express.js middleware used only in development mode:const express = require('express');const errorhandler = require('errorhandler');let app = express();if (process.env.NODE_ENV === 'development') {  // Compliant  app.use(errorhandler());  // Compliant}See   OWASP Top 10 2017 Category A3 - Sensitive Data Exposure     MITRE, CWE-489 - Leftover Debug Code    MITRE, CWE-215 - Information Exposure Through Debug Information ",CIBERSEG:src/main/webapp/scripts/wforms/wforms.js,714,"CWE-489, CWE-215"
LOW,xpath-injection,,,Make sure that executing this XPATH expression is safe.,"Recommended Secure Coding PracticesSanitize any user input before using it in an XPATH expression.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-643 - Improper Neutralization of Data within XPath Expressions    CERT, IDS53-J. - Prevent XPath Injection ",CIBERSEG:src/main/webapp/scripts/dojo/dojo.js,4972,CWE-643
LOW,xpath-injection,,,Make sure that executing this XPATH expression is safe.,"Recommended Secure Coding PracticesSanitize any user input before using it in an XPATH expression.See   OWASP Top 10 2017 Category A1 - Injection    MITRE, CWE-643 - Improper Neutralization of Data within XPath Expressions    CERT, IDS53-J. - Prevent XPath Injection ",CIBERSEG:src/main/webapp/scripts/dojo/dojo.js,4979,CWE-643
